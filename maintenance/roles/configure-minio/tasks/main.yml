---
- file:
    state: directory
    path: "{{ storage_box_minio_data }}"

- name: run the new module
  hetzner_cloud_revese_dns_name:
    ip: "{{ ansible_default_ipv4.address }}"
  register: hetzner_reverse_dns_name

- set_fact:
    storage_server_name: "{{ hetzner_reverse_dns_name.twisted_ip }}"

- include_tasks: configure_ssl_self_sign.yml
  when: storage_box_certsbot_enabled is undefined or not storage_box_certsbot_enabled

- include_tasks: configure_ssl_certs_bot.yml
  when: storage_box_certsbot_enabled

- set_fact:
    minio_container_volumes:
      - "{{ storage_box_minio_data }}:/data"
      - "{{ ssl_local_cert_path }}:/root/.minio/certs/public.crt:ro"
      - "{{ ssl_local_key_path }}:/root/.minio/certs/private.key:ro"

- name: start the minio container
  docker_container:
    name: minio1
    image: minio/minio
    command: server /data
    restart_policy: "unless-stopped"
    ports:
      - "{{ storage_box_minio_host_port }}:9000"
    env:
      MINIO_ACCESS_KEY: "{{ storage_box_minio_access_key }}"
      MINIO_SECRET_KEY: "{{ storage_box_minio_secret_key }}"
    volumes: "{{ minio_container_volumes }}"

- include_role:
    name: geerlingguy.nginx
  vars:
    nginx_error_log: "/var/log/nginx/error.log warn"
    nginx_access_log: "/var/log/nginx/access.log main buffer=16k"
    nginx_vhosts:
      - listen: "80 default_server"
        nginx_server_tokens: "on"
        server_name: "{{ storage_server_name }}"
        filename: "default.conf"
        extra_parameters: |
          location ~ /\.well-known/acme-challenge {
            root /usr/share/nginx/html;
          }
          return 301 https://{{ storage_server_name }}$request_uri;
      - listen: "443 ssl http2"
        server_name: "{{ storage_server_name }}"
        filename: "default_ssl.conf"
        extra_parameters: |

          ignore_invalid_headers off;
          # Allow any size file to be uploaded.
          # Set to a value such as 1000m; to restrict file size to a specific value
          client_max_body_size 0;
          # To disable buffering
          proxy_buffering off;

          ssl_certificate     {{ ssl_local_cert_path }};
          ssl_certificate_key {{ ssl_local_key_path }};
          ssl_protocols       TLSv1.1 TLSv1.2;
          ssl_ciphers         HIGH:!aNULL:!MD5;

          location / {
              proxy_http_version 1.1;
              proxy_set_header Host $http_host;
              proxy_ssl_session_reuse on; # enable this if you are internally connecting over SSL
              proxy_read_timeout 15m; # Default value is 60s which is not sufficient for MinIO.
              proxy_send_timeout 15m; # Default value is 60s which is not sufficient for MinIO.
              proxy_request_buffering off; # Disable any internal request bufferring.

              proxy_pass https://127.0.0.1:9000;
              #health_check uri=/minio/health/ready;
          }

- template:
    src: nginx-req-limit.conf.j2
    dest: /etc/fail2ban/filter.d/nginx-req-limit.conf
    owner: root
    group: root
  notify: restart fail2ban

- template:
    src: fail2ban_jail_nginx.conf.j2
    dest: /etc/fail2ban/jail.d/nginx.conf
    owner: root
    group: root
  notify: restart fail2ban

- firewalld:
    service: https
    permanent: yes
    state: enabled
  notify:
    - restart firewalld

- firewalld:
    service: http
    permanent: yes
    state: enabled
  notify:
    - restart firewalld

- meta: flush_handlers
